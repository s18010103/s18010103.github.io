import{_ as n,W as s,X as a,a1 as t}from"./framework-1c430c0f.js";const e={},p=t(`<p>![](./02 初始数据类型.assets/Image20231004192049.jpg)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>int_num <span class="token operator">=</span> <span class="token number">1</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;int num type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型, 并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token number">1</span>
<span class="token builtin">int</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>float_num <span class="token operator">=</span> <span class="token number">1.5</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;float num type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数椐类型, 并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token number">1.5</span>
<span class="token builtin">float</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
直接检测数椐类型<span class="token punctuation">,</span> 并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_2-字符串「str」" tabindex="-1"><a class="header-anchor" href="#_2-字符串「str」" aria-hidden="true">#</a> 2.字符串「str」</h1><h2 id="_2-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-1-代码示例" aria-hidden="true">#</a> 2.1 代码示例</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>string <span class="token operator">=</span> <span class="token string">&quot; Hello LCY&quot;</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;string type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数椐类型, 并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
 Hello LCY
string <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
直接检测数椐类型<span class="token punctuation">,</span> 并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2字符串三大特性" tabindex="-1"><a class="header-anchor" href="#_2-2字符串三大特性" aria-hidden="true">#</a> 2.2字符串三大特性</h2><p>1.有序性</p><ol><li><p>「从左到右，下标是从 0 开始」；</p></li><li><p>「从右到左，小标是从 -1 开始」；</p></li><li><p>引号里面出现的，都算一个下标 ；</p></li></ol><p>![1](./02 初始数据类型.assets/Image20231004202643.jpg)</p><p>![2](./02 初始数据类型.assets/Image20231004203630.jpg)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;I&#39;m lilei&quot;</span>   <span class="token comment"># 单双引号混用</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&quot;Hello,AIYC!
Hello,would！&quot;  # 单双引号不支持多行
&quot;&quot;&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment">#三个单引号和两个双引号, 支持多行文本。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3字符串長度" tabindex="-1"><a class="header-anchor" href="#_2-3字符串長度" aria-hidden="true">#</a> 2.3字符串長度</h2><p>len()函數：返回字符串的字符长度或者字符数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s1 <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>
s2 <span class="token operator">=</span> <span class="token string">&#39;aiyuechuang&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
<span class="token number">11</span>
<span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![](./02 初始数据类型.assets/Image20231018201017.jpg)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;aiveuchuang&quot;</span>
select <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 提取字符 a</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[p];function i(l,c){return s(),a("div",null,o)}const r=n(e,[["render",i],["__file","02  初始数据类型.html.vue"]]);export{r as default};
