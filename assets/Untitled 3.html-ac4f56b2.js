const n=JSON.parse('{"key":"v-29412a4d","path":"/blog/Untitled.assets/Untitled%203.html","title":"06-HomeWork","lang":"zh-CN","frontmatter":{"title":"06-HomeWork","icon":"python","date":"2023-11-22T19:33:59.000Z","author":"刘奕彤","isOriginal":true,"category":["分类1","分类2"],"tag":["标签1","标签2"],"article":true,"timeline":true,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"backToTop":true,"toc":true,"description":"提取字符串 \\"hello world\\" 中的第一个字符。 从字符串 \\"hello world\\" 中提取最后一个字符。 提取 \\"Python\\" 中的前三个字符。 从 \\"Data Science\\" 中提取最后三个字符。 提取 \\"hello\\" 中的中间字符。 从 \\"Python\\" 中提取偶数索引的字符。 从 \\"learning\\" 中提取奇数索引的字符。 将 \\"hello world\\" 反转。 提取 \\"abcdef\\" 中的字符，步长为2。 提取 \\"python programming\\" 中索引2到5的字符。 将 \\"Python\\" 中的 \\"y\\" 替换为 \\"*\\"。 检查 \\"Python\\" 是否以 \\"P\\" 开头。 检查 \\"Python\\" 是否以 \\"n\\" 结尾。 将 \\"hello world\\" 分割成两部分。 将 \\"one, two, three\\" 分割成三部分。 提取 \\"user@domain.com\\" 中的用户名。 提取 \\"http://www.example.com/path\\" 中的顶级域名。 检查 \\"This is a test\\" 是否包含单词 \\"test\\"。 将 \\"This is a test\\" 中的 \\"test\\" 替换为 \\"exam\\"。 将 \\"python\\" 转换为大写。 将 \\"PYTHON\\" 转换为小写。 将 \\"python programming\\" 中的每个单词首字母大写。 去除 \\" python \\" 两端的空格。 检查 \\"python\\" 是否是全小写。 检查 \\"PYTHON\\" 是否是全大写。 将 \\"123\\" 转换为整数。 检查 \\"1234\\" 是否全是数字。 检查 \\"abcd1234\\" 是否包含数字。 找出 \\"Hello World\\" 中 \\"o\\" 的所有索引。 计算 \\"banana\\" 中 \\"a\\" 出现的次数。 检查 \\"Python\\" 和 \\"python\\" 是否在不区分大小写的情况下相同。 将 \\"Python is fun\\" 的 \\"is\\" 替换为 \\"was\\"。 找出 \\"The quick brown fox\\" 中最长的单词。 将 \\"one, two, three\\" 以逗号为分隔符转换为列表。 将列表 [\\"one\\", \\"two\\", \\"three\\"] 转换为一个字符串，以逗号分隔。 提取 \\"filename.py\\" 的扩展名。 检查 \\"image.jpg\\" 是否是一个图片文件（以 .jpg 或 .png 结尾）。 从 \\"Hello World, welcome to Python programming.\\" 中提取第一个单词。 将 \\"John_Doe\\" 分割为名和姓。 将 \\"error: file not found\\" 中的 \\":\\" 替换为 \\"-\\"。 计算 \\"The rain in Spain\\" 中每个字符（不包括空格）出现的次数。 检查 \\"racecar\\" 是否是回文字符串。 将 \\"123\\" 和 \\"456\\" 拼接成一个字符串。 提取字符串 \\"bracket[123]\\" 中方括号内的内容。 将 \\"Hello\\\\nWorld\\" 分割成两行。 检查 \\"100%\\" 是否以百分号结尾。 从 \\"www.example.com/page?name=Python&amp;lang=en\\" 中提取查询参数。 计算 \\"hello\\" 和 \\"world\\" 的汉明距离（不同位置的字符数）。 将 \\"Python\\" 逐字符重复3次（ 如 \\"PPPythooon\\"）。 检查 \\"This is Python\\" 是否包含 \\"is\\"，并返回其索引位置。 s = \\"hello world\\" select = s[0] print(select) #---output--- h s = \\"hello world\\" select = s[-1] print(select) #---output--- d g = \\"python\\" select = g[0:3] print(select) s = \\"data science\\" select = s[9:12] print(select) s = \\"hello\\" select = s[2] print(select) s = \\"python\\" selecct = s[0:6:2] print(select) s = \\"learning\\" select = s[1:6:2] print(select) x s = \\"abcdef\\" select = s[0:6:2] print(select) s = python progrmming select = s[2:6] print(select) x x x x x s = \\"user@domain.com\\" select = s[0:4] print(select)","head":[["meta",{"property":"og:url","content":"https://hugoliu.top/blog/Untitled.assets/Untitled%203.html"}],["meta",{"property":"og:site_name","content":"皮蛋520号"}],["meta",{"property":"og:title","content":"06-HomeWork"}],["meta",{"property":"og:description","content":"提取字符串 \\"hello world\\" 中的第一个字符。 从字符串 \\"hello world\\" 中提取最后一个字符。 提取 \\"Python\\" 中的前三个字符。 从 \\"Data Science\\" 中提取最后三个字符。 提取 \\"hello\\" 中的中间字符。 从 \\"Python\\" 中提取偶数索引的字符。 从 \\"learning\\" 中提取奇数索引的字符。 将 \\"hello world\\" 反转。 提取 \\"abcdef\\" 中的字符，步长为2。 提取 \\"python programming\\" 中索引2到5的字符。 将 \\"Python\\" 中的 \\"y\\" 替换为 \\"*\\"。 检查 \\"Python\\" 是否以 \\"P\\" 开头。 检查 \\"Python\\" 是否以 \\"n\\" 结尾。 将 \\"hello world\\" 分割成两部分。 将 \\"one, two, three\\" 分割成三部分。 提取 \\"user@domain.com\\" 中的用户名。 提取 \\"http://www.example.com/path\\" 中的顶级域名。 检查 \\"This is a test\\" 是否包含单词 \\"test\\"。 将 \\"This is a test\\" 中的 \\"test\\" 替换为 \\"exam\\"。 将 \\"python\\" 转换为大写。 将 \\"PYTHON\\" 转换为小写。 将 \\"python programming\\" 中的每个单词首字母大写。 去除 \\" python \\" 两端的空格。 检查 \\"python\\" 是否是全小写。 检查 \\"PYTHON\\" 是否是全大写。 将 \\"123\\" 转换为整数。 检查 \\"1234\\" 是否全是数字。 检查 \\"abcd1234\\" 是否包含数字。 找出 \\"Hello World\\" 中 \\"o\\" 的所有索引。 计算 \\"banana\\" 中 \\"a\\" 出现的次数。 检查 \\"Python\\" 和 \\"python\\" 是否在不区分大小写的情况下相同。 将 \\"Python is fun\\" 的 \\"is\\" 替换为 \\"was\\"。 找出 \\"The quick brown fox\\" 中最长的单词。 将 \\"one, two, three\\" 以逗号为分隔符转换为列表。 将列表 [\\"one\\", \\"two\\", \\"three\\"] 转换为一个字符串，以逗号分隔。 提取 \\"filename.py\\" 的扩展名。 检查 \\"image.jpg\\" 是否是一个图片文件（以 .jpg 或 .png 结尾）。 从 \\"Hello World, welcome to Python programming.\\" 中提取第一个单词。 将 \\"John_Doe\\" 分割为名和姓。 将 \\"error: file not found\\" 中的 \\":\\" 替换为 \\"-\\"。 计算 \\"The rain in Spain\\" 中每个字符（不包括空格）出现的次数。 检查 \\"racecar\\" 是否是回文字符串。 将 \\"123\\" 和 \\"456\\" 拼接成一个字符串。 提取字符串 \\"bracket[123]\\" 中方括号内的内容。 将 \\"Hello\\\\nWorld\\" 分割成两行。 检查 \\"100%\\" 是否以百分号结尾。 从 \\"www.example.com/page?name=Python&amp;lang=en\\" 中提取查询参数。 计算 \\"hello\\" 和 \\"world\\" 的汉明距离（不同位置的字符数）。 将 \\"Python\\" 逐字符重复3次（ 如 \\"PPPythooon\\"）。 检查 \\"This is Python\\" 是否包含 \\"is\\"，并返回其索引位置。 s = \\"hello world\\" select = s[0] print(select) #---output--- h s = \\"hello world\\" select = s[-1] print(select) #---output--- d g = \\"python\\" select = g[0:3] print(select) s = \\"data science\\" select = s[9:12] print(select) s = \\"hello\\" select = s[2] print(select) s = \\"python\\" selecct = s[0:6:2] print(select) s = \\"learning\\" select = s[1:6:2] print(select) x s = \\"abcdef\\" select = s[0:6:2] print(select) s = python progrmming select = s[2:6] print(select) x x x x x s = \\"user@domain.com\\" select = s[0:4] print(select)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T12:34:49.000Z"}],["meta",{"property":"article:author","content":"刘奕彤"}],["meta",{"property":"article:tag","content":"标签1"}],["meta",{"property":"article:tag","content":"标签2"}],["meta",{"property":"article:published_time","content":"2023-11-22T19:33:59.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-22T12:34:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06-HomeWork\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-22T19:33:59.000Z\\",\\"dateModified\\":\\"2023-11-22T12:34:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"刘奕彤\\"}]}"]]},"headers":[],"git":{"createdTime":1700656489000,"updatedTime":1700656489000,"contributors":[{"name":"s18010103","email":"s18010104@hoyu.edu.hk","commits":1}]},"readingTime":{"minutes":2.66,"words":799},"filePathRelative":"blog/Untitled.assets/Untitled 3.md","localizedDate":"2023年11月22日","excerpt":"<ol>\\n<li>\\n<p>提取字符串 <code>\\"hello world\\"</code> 中的第一个字符。</p>\\n</li>\\n<li>\\n<p>从字符串 <code>\\"hello world\\"</code> 中提取最后一个字符。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"Python\\"</code> 中的前三个字符。</p>\\n</li>\\n<li>\\n<p>从 <code>\\"Data Science\\"</code> 中提取最后三个字符。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"hello\\"</code> 中的中间字符。</p>\\n</li>\\n<li>\\n<p>从 <code>\\"Python\\"</code> 中提取偶数索引的字符。</p>\\n</li>\\n<li>\\n<p>从 <code>\\"learning\\"</code> 中提取奇数索引的字符。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"hello world\\"</code> 反转。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"abcdef\\"</code> 中的字符，步长为2。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"python programming\\"</code> 中索引2到5的字符。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"Python\\"</code> 中的 <code>\\"y\\"</code> 替换为 <code>\\"*\\"</code>。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"Python\\"</code> 是否以 <code>\\"P\\"</code> 开头。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"Python\\"</code> 是否以 <code>\\"n\\"</code> 结尾。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"hello world\\"</code> 分割成两部分。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"one, two, three\\"</code> 分割成三部分。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"user@domain.com\\"</code> 中的用户名。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"http://www.example.com/path\\"</code> 中的顶级域名。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"This is a test\\"</code> 是否包含单词 <code>\\"test\\"</code>。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"This is a test\\"</code> 中的 <code>\\"test\\"</code> 替换为 <code>\\"exam\\"</code>。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"python\\"</code> 转换为大写。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"PYTHON\\"</code> 转换为小写。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"python programming\\"</code> 中的每个单词首字母大写。</p>\\n</li>\\n<li>\\n<p>去除 <code>\\" python \\"</code> 两端的空格。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"python\\"</code> 是否是全小写。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"PYTHON\\"</code> 是否是全大写。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"123\\"</code> 转换为整数。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"1234\\"</code> 是否全是数字。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"abcd1234\\"</code> 是否包含数字。</p>\\n</li>\\n<li>\\n<p>找出 <code>\\"Hello World\\"</code> 中 <code>\\"o\\"</code> 的所有索引。</p>\\n</li>\\n<li>\\n<p>计算 <code>\\"banana\\"</code> 中 <code>\\"a\\"</code> 出现的次数。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"Python\\"</code> 和 <code>\\"python\\"</code> 是否在不区分大小写的情况下相同。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"Python is fun\\"</code> 的 <code>\\"is\\"</code> 替换为 <code>\\"was\\"</code>。</p>\\n</li>\\n<li>\\n<p>找出 <code>\\"The quick brown fox\\"</code> 中最长的单词。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"one, two, three\\"</code> 以逗号为分隔符转换为列表。</p>\\n</li>\\n<li>\\n<p>将列表 <code>[\\"one\\", \\"two\\", \\"three\\"]</code> 转换为一个字符串，以逗号分隔。</p>\\n</li>\\n<li>\\n<p>提取 <code>\\"filename.py\\"</code> 的扩展名。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"image.jpg\\"</code> 是否是一个图片文件（以 <code>.jpg</code> 或 <code>.png</code> 结尾）。</p>\\n</li>\\n<li>\\n<p>从 <code>\\"Hello World, welcome to Python programming.\\"</code> 中提取第一个单词。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"John_Doe\\"</code> 分割为名和姓。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"error: file not found\\"</code> 中的 <code>\\":\\"</code> 替换为 <code>\\"-\\"</code>。</p>\\n</li>\\n<li>\\n<p>计算 <code>\\"The rain in Spain\\"</code> 中每个字符（不包括空格）出现的次数。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"racecar\\"</code> 是否是回文字符串。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"123\\"</code> 和 <code>\\"456\\"</code> 拼接成一个字符串。</p>\\n</li>\\n<li>\\n<p>提取字符串 <code>\\"bracket[123]\\"</code> 中方括号内的内容。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"Hello\\\\nWorld\\"</code> 分割成两行。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"100%\\"</code> 是否以百分号结尾。</p>\\n</li>\\n<li>\\n<p>从 <code>\\"www.example.com/page?name=Python&amp;lang=en\\"</code> 中提取查询参数。</p>\\n</li>\\n<li>\\n<p>计算 <code>\\"hello\\"</code> 和 <code>\\"world\\"</code> 的汉明距离（不同位置的字符数）。</p>\\n</li>\\n<li>\\n<p>将 <code>\\"Python\\"</code> 逐字符重复3次（ 如 <code>\\"PPPythooon\\"</code>）。</p>\\n</li>\\n<li>\\n<p>检查 <code>\\"This is Python\\"</code> 是否包含 <code>\\"is\\"</code>，并返回其索引位置。</p>\\n</li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"hello world\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n \\n <span class=\\"token comment\\">#---output---</span>\\n h \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"hello world\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n \\n <span class=\\"token comment\\">#---output---</span>\\n d\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> g <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"python\\"</span>\\n select <span class=\\"token operator\\">=</span> g<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"data science\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">12</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"hello\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"python\\"</span>\\n selecct <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"learning\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code> x\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"abcdef\\"</span>\\n select <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>s <span class=\\"token operator\\">=</span> python progrmming\\nselect <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>x</p>\\n</li>\\n<li>\\n<p>x</p>\\n</li>\\n<li>\\n<p>x</p>\\n</li>\\n<li>\\n<p>x</p>\\n</li>\\n<li>\\n<p>x</p>\\n</li>\\n<li>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"user@domain.com\\"</span>\\nselect <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>select<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li></li>\\n</ol>","autoDesc":true}');export{n as data};
